{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"signup-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"직원 회원가입\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitForm, [\"prevent\"])\n  }, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"이름\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.name = $event),\n    type: \"text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.name]]), _cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"이메일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n    type: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.email]]), _cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"비밀번호\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.password]]), _cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"직책\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.position = $event),\n    required: \"\"\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"option\", {\n    disabled: \"\",\n    value: \"\"\n  }, \"선택\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"LD\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"SM\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"FM\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"VMD\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"ASM\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"PT\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"FT\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.form.position]]), _cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"층\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.floor = $event),\n    type: \"text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.floor]]), _cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"입사일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.form.join_date = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.join_date]]), _cache[13] || (_cache[13] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"회원가입\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","submitForm","_cache","$event","form","name","type","required","email","password","position","disabled","value","floor","join_date","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/SignupPage.vue"],"sourcesContent":["<template>\n  <div class=\"signup-container\">\n    <h2>직원 회원가입</h2>\n\n    <form @submit.prevent=\"submitForm\">\n      <label>이름</label>\n      <input v-model=\"form.name\" type=\"text\" required />\n\n      <label>이메일</label>\n      <input v-model=\"form.email\" type=\"email\" required />\n\n      <label>비밀번호</label>\n      <input v-model=\"form.password\" type=\"password\" required />\n\n      <label>직책</label>\n      <select v-model=\"form.position\" required>\n        <option disabled value=\"\">선택</option>\n        <option>LD</option>\n        <option>SM</option>\n        <option>FM</option>\n        <option>VMD</option>\n        <option>ASM</option>\n        <option>PT</option>\n        <option>FT</option>\n      </select>\n\n      <label>층</label>\n      <input v-model=\"form.floor\" type=\"text\" required />\n\n      <label>입사일</label>\n      <input v-model=\"form.join_date\" type=\"date\" required />\n\n      <button type=\"submit\">회원가입</button>\n    </form>\n\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst form = ref({\n  name: '',\n  email: '',\n  password: '',\n  position: '',\n  floor: '',\n  join_date: '',\n})\n\nconst errorMessage = ref('')\n\nconst submitForm = async () => {\n  try {\n    await axios.post('/employee/create', form.value)\n    router.push('/login') // 회원가입 성공 시 로그인 페이지로 이동\n  } catch (error) {\n    errorMessage.value = error.response?.data?.message || '회원가입에 실패했습니다.'\n  }\n}\n</script>\n\n<style scoped>\n.signup-container {\n  max-width: 400px;\n  margin: auto;\n  padding: 20px;\n}\ninput, select {\n  width: 100%;\n  margin-bottom: 10px;\n}\n.error {\n  color: red;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAD/BC,GAAA;EAmC2BD,KAAK,EAAC;;;uBAlC/BE,mBAAA,CAmCM,OAnCNC,UAmCM,G,4BAlCJC,mBAAA,CAAgB,YAAZ,SAAO,sBAEXA,mBAAA,CA6BO;IA7BAC,QAAM,EAJjBC,cAAA,CAI2BC,MAAA,CAAAC,UAAU;gCAC/BJ,mBAAA,CAAiB,eAAV,IAAE,sB,gBACTA,mBAAA,CAAkD;IANxD,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBH,MAAA,CAAAI,IAAI,CAACC,IAAI,GAAAF,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAvBP,MAAA,CAAAI,IAAI,CAACC,IAAI,E,6BAEzBR,mBAAA,CAAkB,eAAX,KAAG,sB,gBACVA,mBAAA,CAAoD;IAT1D,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASsBH,MAAA,CAAAI,IAAI,CAACI,KAAK,GAAAL,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAzBP,MAAA,CAAAI,IAAI,CAACI,KAAK,E,6BAE1BX,mBAAA,CAAmB,eAAZ,MAAI,sB,gBACXA,mBAAA,CAA0D;IAZhE,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYsBH,MAAA,CAAAI,IAAI,CAACK,QAAQ,GAAAN,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA/BP,MAAA,CAAAI,IAAI,CAACK,QAAQ,E,+BAE7BZ,mBAAA,CAAiB,eAAV,IAAE,sB,gBACTA,mBAAA,CASS;IAxBf,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeuBH,MAAA,CAAAI,IAAI,CAACM,QAAQ,GAAAP,MAAA;IAAEI,QAAQ,EAAR;gCAC9BV,mBAAA,CAAqC;IAA7Bc,QAAQ,EAAR,EAAQ;IAACC,KAAK,EAAC;KAAG,IAAE,qBAC5Bf,mBAAA,CAAmB,gBAAX,IAAE,qBACVA,mBAAA,CAAmB,gBAAX,IAAE,qBACVA,mBAAA,CAAmB,gBAAX,IAAE,qBACVA,mBAAA,CAAoB,gBAAZ,KAAG,qBACXA,mBAAA,CAAoB,gBAAZ,KAAG,qBACXA,mBAAA,CAAmB,gBAAX,IAAE,qBACVA,mBAAA,CAAmB,gBAAX,IAAE,oB,2CARKG,MAAA,CAAAI,IAAI,CAACM,QAAQ,E,+BAW9Bb,mBAAA,CAAgB,eAAT,GAAC,sB,gBACRA,mBAAA,CAAmD;IA3BzD,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA2BsBH,MAAA,CAAAI,IAAI,CAACS,KAAK,GAAAV,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAxBP,MAAA,CAAAI,IAAI,CAACS,KAAK,E,+BAE1BhB,mBAAA,CAAkB,eAAX,KAAG,sB,gBACVA,mBAAA,CAAuD;IA9B7D,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA8BsBH,MAAA,CAAAI,IAAI,CAACU,SAAS,GAAAX,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAA5BP,MAAA,CAAAI,IAAI,CAACU,SAAS,E,+BAE9BjB,mBAAA,CAAmC;IAA3BS,IAAI,EAAC;EAAQ,GAAC,MAAI,qB,4BAGnBN,MAAA,CAAAe,YAAY,I,cAArBpB,mBAAA,CAA2D,KAA3DqB,UAA2D,EAAAC,gBAAA,CAAnBjB,MAAA,CAAAe,YAAY,oBAnCxDG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}