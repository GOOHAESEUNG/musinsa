{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"채팅방 목록\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatRooms, room => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: room.roomId\n    }, _toDisplayString(room.roomName) + \" (\" + _toDisplayString(room.roomType) + \") \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$setup","chatRooms","room","key","roomId","roomName","_toDisplayString","roomType"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/ChatRoomListPage.vue"],"sourcesContent":["\n\n<template>\n  <div>\n    <h1>채팅방 목록</h1>\n    <ul>\n      <li v-for=\"room in chatRooms\" :key=\"room.roomId\">\n        {{ room.roomName }} ({{ room.roomType }})\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\n\nconst chatRooms = ref([])\n\nonMounted(async () => {\n  try {\n    const response = await axios.get('/api/chat/rooms/my', {\n        headers: {\n         Authorization: `Bearer ${localStorage.getItem('token')}`\n  }\n})\n    chatRooms.value = response.data\n  } catch (error) {\n    console.error('채팅방 목록을 불러오는 중 오류 발생:', error)\n  }\n})\n</script>"],"mappings":";;uBAGEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QARXC,WAAA,CAMyBC,MAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAfN,mBAAA,CAEK;MAF0BO,GAAG,EAAED,IAAI,CAACE;wBACpCF,IAAI,CAACG,QAAQ,IAAG,IAAE,GAAAC,gBAAA,CAAGJ,IAAI,CAACK,QAAQ,IAAG,IAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}