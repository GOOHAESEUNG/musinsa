{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"signup-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-fields\"\n};\nconst _hoisted_3 = {\n  class: \"floor-button-group\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"MUSINSA CREW 회원가입\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitForm, [\"prevent\"])\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"이름\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.name = $event),\n    type: \"text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.name]]), _cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"이메일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n    type: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.email]]), _cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"비밀번호\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.password]]), _cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"직책\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.position = $event),\n    required: \"\"\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"option\", {\n    disabled: \"\",\n    value: \"\"\n  }, \"선택\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"LD\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"SM\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"FM\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"VMD\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"ASM\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"PT\", -1 /* HOISTED */), _createElementVNode(\"option\", null, \"FT\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.form.position]]), _cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"층\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.floorOptions, option => {\n    return _createElementVNode(\"button\", {\n      key: option,\n      type: \"button\",\n      class: _normalizeClass({\n        selected: $setup.form.floor === option\n      }),\n      onClick: $event => $setup.form.floor = option\n    }, _toDisplayString(option), 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 64 /* STABLE_FRAGMENT */))]), _cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"입사일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.join_date = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.join_date]])]), _cache[12] || (_cache[12] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"회원가입\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","submitForm","_hoisted_2","_cache","$event","form","name","type","required","email","password","position","disabled","value","_hoisted_3","_Fragment","_renderList","floorOptions","option","_normalizeClass","selected","floor","onClick","_hoisted_4","join_date","errorMessage","_hoisted_5","_toDisplayString","_createCommentVNode"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/SignupPage.vue"],"sourcesContent":["<template>\n  <div class=\"signup-container\">\n    <h2>MUSINSA CREW 회원가입</h2>\n\n    <form @submit.prevent=\"submitForm\">\n      <div class=\"form-fields\">\n        <label>이름</label>\n        <input v-model=\"form.name\" type=\"text\" required />\n \n        <label>이메일</label>\n        <input v-model=\"form.email\" type=\"email\" required />\n \n        <label>비밀번호</label>\n        <input v-model=\"form.password\" type=\"password\" required />\n \n        <label>직책</label>\n        <select v-model=\"form.position\" required>\n          <option disabled value=\"\">선택</option>\n          <option>LD</option>\n          <option>SM</option>\n          <option>FM</option>\n          <option>VMD</option>\n          <option>ASM</option>\n          <option>PT</option>\n          <option>FT</option>\n        </select>\n \n        <label>층</label>\n        <div class=\"floor-button-group\">\n          <button\n            v-for=\"option in floorOptions\"\n            :key=\"option\"\n            type=\"button\"\n            :class=\"{ selected: form.floor === option }\"\n            @click=\"form.floor = option\"\n          >\n            {{ option }}\n          </button>\n        </div>\n \n        <label>입사일</label>\n        <input v-model=\"form.join_date\" type=\"date\" required />\n      </div>\n      <button type=\"submit\">회원가입</button>\n    </form>\n\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst form = ref({\n  name: '',\n  email: '',\n  password: '',\n  position: '',\n  floor: '',\n  join_date: '',\n})\n\nconst floorOptions = ['지하1층', '1층', '2층', '3층', '4층', '관리자']\n\nconst errorMessage = ref('')\n\nconst submitForm = async () => {\n  try {\n    await axios.post('/employee/create', form.value)\n    router.push('/login') // 회원가입 성공 시 로그인 페이지로 이동\n  } catch (error) {\n    errorMessage.value = error.response?.data?.message || '회원가입에 실패했습니다.'\n  }\n}\n</script>\n\n<style scoped>\n.signup-container {\n  min-height: 100vh;\n  background-color: #000;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n}\n.form-fields {\n  padding: 16px;\n  border-radius: 12px;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 400px;\n}\ninput, select {\n  width: 100%;\n  margin-bottom: 12px;\n  background-color: white; /* input box is white */\n  color: black;\n  border: 1px solid #ccc; /* subtle light gray border */\n  padding: 10px;\n  border-radius: 6px;\n  box-sizing: border-box;\n}\n.error {\n  color: red;\n}\nlabel {\n  margin-top: 8px; \n  display: block;\n  color: white;\n}\nbutton[type=\"submit\"] {\n  width: 100%;\n  background-color: #555; /* medium gray */\n  color: white;\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #444; /* slightly darker gray */\n}\n.floor-button-group {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  margin-bottom: 12px;\n}\n\n.floor-button-group button {\n  background-color: #eee;\n  color: #333;\n  border: 1px solid #ccc;\n  padding: 6px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.floor-button-group button.selected {\n  background-color: #333;\n  color: white;\n  border-color: #333;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}