{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'SignupPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      name: '',\n      email: '',\n      password: '',\n      position: '',\n      floor: '',\n      join_date: ''\n    });\n    const floorOptions = ['지하1층', '1층', '2층', '3층', '4층', '관리자'];\n    const errorMessage = ref('');\n    const submitForm = async () => {\n      try {\n        await axios.post('/employee/create', form.value);\n        router.push('/login'); // 회원가입 성공 시 로그인 페이지로 이동\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || '회원가입에 실패했습니다.';\n      }\n    };\n    const __returned__ = {\n      router,\n      form,\n      floorOptions,\n      errorMessage,\n      submitForm,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","router","form","name","email","password","position","floor","join_date","floorOptions","errorMessage","submitForm","post","value","push","error","response","data","message"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/SignupPage.vue"],"sourcesContent":["<template>\n  <div class=\"signup-container\">\n    <h2>MUSINSA CREW 회원가입</h2>\n\n    <form @submit.prevent=\"submitForm\">\n      <div class=\"form-fields\">\n        <label>이름</label>\n        <input v-model=\"form.name\" type=\"text\" required />\n \n        <label>이메일</label>\n        <input v-model=\"form.email\" type=\"email\" required />\n \n        <label>비밀번호</label>\n        <input v-model=\"form.password\" type=\"password\" required />\n \n        <label>직책</label>\n        <select v-model=\"form.position\" required>\n          <option disabled value=\"\">선택</option>\n          <option>LD</option>\n          <option>SM</option>\n          <option>FM</option>\n          <option>VMD</option>\n          <option>ASM</option>\n          <option>PT</option>\n          <option>FT</option>\n        </select>\n \n        <label>층</label>\n        <div class=\"floor-button-group\">\n          <button\n            v-for=\"option in floorOptions\"\n            :key=\"option\"\n            type=\"button\"\n            :class=\"{ selected: form.floor === option }\"\n            @click=\"form.floor = option\"\n          >\n            {{ option }}\n          </button>\n        </div>\n \n        <label>입사일</label>\n        <input v-model=\"form.join_date\" type=\"date\" required />\n      </div>\n      <button type=\"submit\">회원가입</button>\n    </form>\n\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst form = ref({\n  name: '',\n  email: '',\n  password: '',\n  position: '',\n  floor: '',\n  join_date: '',\n})\n\nconst floorOptions = ['지하1층', '1층', '2층', '3층', '4층', '관리자']\n\nconst errorMessage = ref('')\n\nconst submitForm = async () => {\n  try {\n    await axios.post('/employee/create', form.value)\n    router.push('/login') // 회원가입 성공 시 로그인 페이지로 이동\n  } catch (error) {\n    errorMessage.value = error.response?.data?.message || '회원가입에 실패했습니다.'\n  }\n}\n</script>\n\n<style scoped>\n.signup-container {\n  height: 100vh;\n  background-color: #000;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-sizing: border-box;\n}\n.form-fields {\n  padding: 16px;\n  border-radius: 12px;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 400px;\n}\ninput, select {\n  width: 100%;\n  margin-bottom: 12px;\n  background-color: white; /* input box is white */\n  color: black;\n  border: 1px solid #ccc; /* subtle light gray border */\n  padding: 10px;\n  border-radius: 6px;\n  box-sizing: border-box;\n}\n.error {\n  color: red;\n}\nlabel {\n  margin-top: 8px; \n  display: block;\n  color: black;\n}\nbutton[type=\"submit\"] {\n  width: 100%;\n  background-color: #555; /* medium gray */\n  color: white;\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #444; /* slightly darker gray */\n}\n.floor-button-group {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  margin-bottom: 12px;\n}\n\n.floor-button-group button {\n  background-color: #eee;\n  color: #333;\n  border: 1px solid #ccc;\n  padding: 6px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.floor-button-group button.selected {\n  background-color: #333;\n  color: white;\n  border-color: #333;\n}\n</style>"],"mappings":";AAmDA,SAASA,GAAG,QAAQ,KAAI;AACxB,OAAOC,KAAK,MAAM,OAAM;AACxB,SAASC,SAAS,QAAQ,YAAW;;;;;;;IAErC,MAAMC,MAAM,GAAGD,SAAS,CAAC;IAEzB,MAAME,IAAI,GAAGJ,GAAG,CAAC;MACfK,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IACb,CAAC;IAED,MAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK;IAE3D,MAAMC,YAAY,GAAGZ,GAAG,CAAC,EAAE;IAE3B,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMZ,KAAK,CAACa,IAAI,CAAC,kBAAkB,EAAEV,IAAI,CAACW,KAAK;QAC/CZ,MAAM,CAACa,IAAI,CAAC,QAAQ,CAAC,EAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,YAAY,CAACG,KAAK,GAAGE,KAAK,CAACC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,IAAI,eAAc;MACtE;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}