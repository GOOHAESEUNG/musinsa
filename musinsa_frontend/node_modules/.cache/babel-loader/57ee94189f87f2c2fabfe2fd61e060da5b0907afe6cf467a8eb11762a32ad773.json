{"ast":null,"code":"import { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  __name: 'ChatRoomDetailPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const roomId = route.params.roomId;\n    const newMessage = ref('');\n    const sendMessage = () => {\n      if (newMessage.value.trim() === '') return;\n      console.log(`[${roomId}] 전송할 메시지:`, newMessage.value);\n      newMessage.value = '';\n    };\n    const goBack = () => {\n      router.back();\n    };\n    const __returned__ = {\n      route,\n      router,\n      roomId,\n      newMessage,\n      sendMessage,\n      goBack,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRoute","useRouter","route","router","roomId","params","newMessage","sendMessage","value","trim","console","log","goBack","back"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/ChatRoomDetailPage.vue"],"sourcesContent":["\n\n<template>\n  <div class=\"chat-room-container\">\n    <header class=\"chat-header\">\n      <button @click=\"goBack\">뒤로가기</button>\n      <h2>{{ roomId }}번 채팅방</h2>\n    </header>\n\n    <div class=\"chat-messages\">\n      <!-- 메시지 목록 표시 예정 -->\n      <p>여기에 메시지가 표시됩니다.</p>\n    </div>\n\n    <form @submit.prevent=\"sendMessage\" class=\"chat-input-area\">\n      <input\n        v-model=\"newMessage\"\n        placeholder=\"메시지를 입력하세요\"\n        class=\"chat-input\"\n      />\n      <button type=\"submit\" class=\"send-button\">전송</button>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nconst route = useRoute()\nconst router = useRouter()\nconst roomId = route.params.roomId\nconst newMessage = ref('')\n\nconst sendMessage = () => {\n  if (newMessage.value.trim() === '') return\n  console.log(`[${roomId}] 전송할 메시지:`, newMessage.value)\n  newMessage.value = ''\n}\n\nconst goBack = () => {\n  router.back()\n}\n</script>\n\n<style scoped>\n.chat-room-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 16px;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.chat-messages {\n  flex: 1;\n  border: 1px solid #ddd;\n  padding: 12px;\n  background-color: #fafafa;\n  margin-bottom: 12px;\n}\n\n.chat-input-area {\n  display: flex;\n  gap: 8px;\n}\n\n.chat-input {\n  flex: 1;\n  padding: 8px;\n}\n\n.send-button {\n  padding: 8px 12px;\n}\n</style>"],"mappings":"AA0BA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAW;;;;;;;IAE/C,MAAMC,KAAK,GAAGF,QAAQ,CAAC;IACvB,MAAMG,MAAM,GAAGF,SAAS,CAAC;IACzB,MAAMG,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACD,MAAK;IACjC,MAAME,UAAU,GAAGP,GAAG,CAAC,EAAE;IAEzB,MAAMQ,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAID,UAAU,CAACE,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpCC,OAAO,CAACC,GAAG,CAAC,IAAIP,MAAM,YAAY,EAAEE,UAAU,CAACE,KAAK;MACpDF,UAAU,CAACE,KAAK,GAAG,EAAC;IACtB;IAEA,MAAMI,MAAM,GAAGA,CAAA,KAAM;MACnBT,MAAM,CAACU,IAAI,CAAC;IACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}