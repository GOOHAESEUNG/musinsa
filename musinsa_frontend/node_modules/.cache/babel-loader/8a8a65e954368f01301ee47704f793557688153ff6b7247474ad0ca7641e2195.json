{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'MyInfoPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const myInfo = ref(null);\n    const router = useRouter();\n    onMounted(async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('/employee/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        myInfo.value = response.data;\n      } catch (error) {\n        console.error('사용자 정보 조회 실패:', error);\n        router.push('/login'); // 실패 시 로그인으로 리다이렉트\n      }\n    });\n    const __returned__ = {\n      myInfo,\n      router,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useRouter","myInfo","router","token","localStorage","getItem","response","get","headers","Authorization","value","data","error","console","push"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/MyInfoPage.vue"],"sourcesContent":["\n\n<template>\n  <div class=\"myinfo-container\">\n    <h2>내 정보</h2>\n    <div v-if=\"myInfo\" class=\"info-box\">\n      <p><strong>이름:</strong> {{ myInfo.name }}</p>\n      <p><strong>이메일:</strong> {{ myInfo.email }}</p>\n      <p><strong>직책:</strong> {{ myInfo.position }}</p>\n      <p><strong>층:</strong> {{ myInfo.floor }}</p>\n    </div>\n    <p v-else>정보를 불러오는 중...</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport { useRouter } from 'vue-router'\n\nconst myInfo = ref(null)\nconst router = useRouter()\n\nonMounted(async () => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios.get('/employee/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n    myInfo.value = response.data\n  } catch (error) {\n    console.error('사용자 정보 조회 실패:', error)\n    router.push('/login') // 실패 시 로그인으로 리다이렉트\n  }\n})\n</script>\n\n<style scoped>\n.myinfo-container {\n  min-height: 100vh;\n  background-color: #000;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px 20px;\n  box-sizing: border-box;\n}\n\n.info-box {\n  background-color: #111;\n  padding: 24px;\n  border-radius: 10px;\n  width: 100%;\n  max-width: 400px;\n  margin-top: 20px;\n}\n\n.info-box p {\n  margin-bottom: 12px;\n  font-size: 16px;\n}\n</style>"],"mappings":";AAgBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,KAAK,MAAM,OAAM;AACxB,SAASC,SAAS,QAAQ,YAAW;;;;;;;IAErC,MAAMC,MAAM,GAAGJ,GAAG,CAAC,IAAI;IACvB,MAAMK,MAAM,GAAGF,SAAS,CAAC;IAEzBF,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,cAAc,EAAE;UAC/CC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC;QACDF,MAAM,CAACS,KAAK,GAAGJ,QAAQ,CAACK,IAAG;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK;QACpCV,MAAM,CAACY,IAAI,CAAC,QAAQ,CAAC,EAAC;MACxB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}