{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'ChatRoomListPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const chatRooms = ref([]);\n    const goToRoom = roomId => {\n      router.push(`/chat/room/${roomId}`);\n    };\n    onMounted(async () => {\n      try {\n        const response = await axios.get('/api/chat/rooms/my', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        chatRooms.value = response.data;\n      } catch (error) {\n        console.error('채팅방 목록을 불러오는 중 오류 발생:', error);\n      }\n    });\n    const __returned__ = {\n      router,\n      chatRooms,\n      goToRoom,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useRouter","router","chatRooms","goToRoom","roomId","push","response","get","headers","Authorization","localStorage","getItem","value","data","error","console"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/ChatRoomListPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>채팅방 목록</h1>\n    <div class=\"chat-room-list\">\n      <div\n        class=\"chat-room-card\"\n        v-for=\"room in chatRooms\"\n        :key=\"room.roomId\"\n        @click=\"goToRoom(room.roomId)\"\n      >\n        <div class=\"chat-room-label\" :class=\"room.isGroupChat === 'Y' ? 'group' : 'private'\">\n          {{ room.isGroupChat === 'Y' ? '단체 채팅방' : '1:1 채팅방' }}\n        </div>\n        <div class=\"chat-room-name\">{{ room.roomName }}</div>\n        <div class=\"chat-room-type\">({{ room.chatRoomType ?? room.chatRoomType?.name }})</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\nconst chatRooms = ref([])\n\nconst goToRoom = (roomId) => {\n  router.push(`/chat/room/${roomId}`)\n}\n\nonMounted(async () => {\n  try {\n    const response = await axios.get('/api/chat/rooms/my', {\n        headers: {\n         Authorization: `Bearer ${localStorage.getItem('token')}`\n  }\n})\n    chatRooms.value = response.data\n  } catch (error) {\n    console.error('채팅방 목록을 불러오는 중 오류 발생:', error)\n  }\n})\n</script>\n\n<style scoped>\n.chat-room-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 16px;\n}\n\n.chat-room-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 12px 16px;\n  background-color: #f9f9f9;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n  cursor: pointer;\n}\n\n.chat-room-label {\n  font-size: 14px;\n  font-weight: bold;\n  margin-bottom: 4px;\n}\n\n.chat-room-label.group {\n  color: #1e88e5;\n}\n\n.chat-room-label.private {\n  color: #43a047;\n}\n\n.chat-room-name {\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.chat-room-type {\n  font-size: 13px;\n  color: #888;\n}\n</style>"],"mappings":";AAqBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,KAAK,MAAM,OAAM;AACxB,SAASC,SAAS,QAAQ,YAAW;;;;;;;IAErC,MAAMC,MAAM,GAAGD,SAAS,CAAC;IACzB,MAAME,SAAS,GAAGL,GAAG,CAAC,EAAE;IAExB,MAAMM,QAAQ,GAAIC,MAAM,IAAK;MAC3BH,MAAM,CAACI,IAAI,CAAC,cAAcD,MAAM,EAAE;IACpC;IAEAN,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,oBAAoB,EAAE;UACnDC,OAAO,EAAE;YACRC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC7D;QACF,CAAC;QACGT,SAAS,CAACU,KAAK,GAAGN,QAAQ,CAACO,IAAG;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK;MAC9C;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}