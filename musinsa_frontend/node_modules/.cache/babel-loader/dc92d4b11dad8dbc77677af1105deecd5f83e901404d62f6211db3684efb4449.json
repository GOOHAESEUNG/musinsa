{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      email: '',\n      password: ''\n    });\n    const errorMessage = ref('');\n    const submitForm = async () => {\n      try {\n        const response = await axios.post('/employee/doLogin', form.value);\n        const token = response.data.token;\n        localStorage.setItem('token', token);\n        router.push('/'); // 로그인 후 홈으로 이동\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || '로그인에 실패했습니다.';\n      }\n    };\n    const __returned__ = {\n      router,\n      form,\n      errorMessage,\n      submitForm,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","router","form","email","password","errorMessage","submitForm","response","post","value","token","data","localStorage","setItem","push","error","message"],"sources":["/Users/haeseung/2025/musinsa_project/musinsa_frontend/src/pages/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <h2 style=\"text-align: center\">MUSINSA CREW 로그인</h2>\n\n    <form @submit.prevent=\"submitForm\">\n      <label>이메일</label>\n      <input v-model=\"form.email\" type=\"email\" required />\n\n      <label>비밀번호</label>\n      <input v-model=\"form.password\" type=\"password\" required />\n\n      <button type=\"submit\">로그인</button>\n    </form>\n\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst form = ref({\n  email: '',\n  password: '',\n})\n\nconst errorMessage = ref('')\n\nconst submitForm = async () => {\n  try {\n    const response = await axios.post('/employee/doLogin', form.value)\n    const token = response.data.token\n    localStorage.setItem('token', token)\n    router.push('/') // 로그인 후 홈으로 이동\n  } catch (error) {\n    errorMessage.value = error.response?.data?.message || '로그인에 실패했습니다.'\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  background-color: #000;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  box-sizing: border-box;\n}\n\ninput {\n  width: 100%;\n  margin-bottom: 12px;\n  background-color: white;\n  color: black;\n  border: 1px solid #ccc;\n  padding: 10px;\n  border-radius: 6px;\n  box-sizing: border-box;\n}\n\n.error {\n  color: red;\n}\n\nlabel {\n  margin-top: 8px;\n  display: block;\n  color: black;\n}\n\nbutton[type=\"submit\"] {\n  width: 100%;\n  background-color: #555;\n  color: white;\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #444;\n}\n</style>"],"mappings":";AAmBA,SAASA,GAAG,QAAQ,KAAI;AACxB,OAAOC,KAAK,MAAM,OAAM;AACxB,SAASC,SAAS,QAAQ,YAAW;;;;;;;IAErC,MAAMC,MAAM,GAAGD,SAAS,CAAC;IAEzB,MAAME,IAAI,GAAGJ,GAAG,CAAC;MACfK,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,YAAY,GAAGP,GAAG,CAAC,EAAE;IAE3B,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,mBAAmB,EAAEN,IAAI,CAACO,KAAK;QACjE,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACD,KAAI;QAChCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK;QACnCT,MAAM,CAACa,IAAI,CAAC,GAAG,CAAC,EAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdV,YAAY,CAACI,KAAK,GAAGM,KAAK,CAACR,QAAQ,EAAEI,IAAI,EAAEK,OAAO,IAAI,cAAa;MACrE;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}